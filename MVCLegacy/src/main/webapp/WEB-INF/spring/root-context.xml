<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!--  스프링이 지원하는 데이터 연동기술에서의 핵심은 트랜잭션에 있다!!
		따라서 jndi 나 데이터 소스의 취득은 다른 어떤 기술보다도 스프링이 주도해야한다 
		 -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/oracle" resource-ref="true"/>
	
	<!-- 개발자가 사용하고자 하는 DB연동 기술에 알맞는 트랜잭션 매니저 등록 -->
	<bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 기존 순수 Mybatis 에서 사용하던 객체들과 크게 달라지지는 않았음
		기존 Mybatis 와 동일하게 Factory 로 부터 쿼리 수행 객체를 얻어와야 하므로 , SqlSessionFactoryBean을 먼저 스프링에 등록하자
	 -->
	 
	 <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
	 	<property name="dataSource" ref="dataSource"></property>
	 	<property name="configLocation" value="classpath:com/koreait/mvclegacy/mybatis/config/config.xml" ></property>
	 </bean>
	 
	 <!-- 실제 쿼리문 수행하는 객체인 sqlSessionTemplate 등록 -->
	 <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	 	<constructor-arg ref="sqlSessionFactoryBean" />
	 </bean>
	 
	 <!-- JdbcTemplate 등록 -->
	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	 	<property name="dataSource" ref="dataSource"></property>
	 </bean>
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:component-scan base-package="com.koreait.mvclegacy.model">
	
	<!-- <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/> 모든 컨트롤러제외 방법..  --> 
	</context:component-scan>
	
	
</beans>
